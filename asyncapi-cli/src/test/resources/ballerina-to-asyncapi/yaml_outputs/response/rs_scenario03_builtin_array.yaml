asyncapi: 2.5.0
info:
  title: PayloadV
  version: 0.0.0
servers:
  development:
    url: "{server}:{port}/payloadV"
    protocol: ws
    protocolVersion: "13"
    variables:
      server:
        default: ws://localhost
      port:
        default: "9090"
channels:
  /:
    subscribe:
      message:
        oneOf:
          - payload:
              type: array
              items:
                $ref: '#/components/schemas/SubscriptionStatus'
          - payload:
              type: array
              items:
                type: string
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/Subscribe'
          - $ref: '#/components/messages/UnSubscribe'
components:
  schemas:
    Subscribe:
      type: object
      required:
        - id
        - event
      properties:
        id:
          type: integer
          format: int64
        event:
          type: string
          const: Subscribe
    SubscriptionStatus:
      type: object
      required:
        - id
        - type1
      properties:
        id:
          type: integer
          format: int64
        type1:
          type: string
    UnSubscribe:
      type: object
      required:
        - id
        - event
      properties:
        id:
          type: integer
          format: int64
        event:
          type: string
          const: UnSubscribe
  messages:
    Subscribe:
      payload:
        $ref: '#/components/schemas/Subscribe'
      x-response:
        payload:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionStatus'
      x-response-type: simple-rpc
    UnSubscribe:
      payload:
        $ref: '#/components/schemas/UnSubscribe'
      x-response:
        payload:
          type: array
          items:
            type: string
      x-response-type: simple-rpc
x-dispatcherKey: event