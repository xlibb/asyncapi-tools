asyncapi: 2.5.0
info:
  title: PayloadV
  version: 0.0.0
servers:
  development:
    url: "{server}:{port}/payloadV"
    protocol: ws
    protocolVersion: "13"
    variables:
      server:
        default: ws://localhost
      port:
        default: "9090"
channels:
  /locations:
    description: Represents Snowpeak location resource
    subscribe:
      message:
        oneOf:
          - $ref: '#/components/messages/ReservationCreated'
          - $ref: '#/components/messages/ReservationConflict'
    publish:
      message:
        $ref: '#/components/messages/Subscribe'
components:
  schemas:
    Subscribe:
      type: object
      required:
        - id
        - event
      properties:
        id:
          type: integer
          format: int64
        event:
          type: string
          const: Subscribe
    Link:
      type: object
      required:
        - rel
        - href
      properties:
        rel:
          type: string
          description: linnk rel
        href:
          type: string
          description: link href
        mediaTypes:
          type: array
          items:
            type: string
          description: mediaTypes
        actions:
          type: array
          items:
            type: string
            enum:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
          description: actions
      description: Link details
    Links:
      type: object
      required:
        - links
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
          description: Array links
      description: Link details
    ReserveRoom:
      type: object
      required:
        - id
        - count
      properties:
        id:
          type: string
          description: Unique identification of the room
        count:
          type: integer
          description: Number of rooms
          format: int64
      description: Represents rooms be reserved
    Reservation:
      type: object
      required:
        - reserveRooms
        - startDate
        - endDate
      properties:
        reserveRooms:
          type: array
          items:
            $ref: '#/components/schemas/ReserveRoom'
          description: Rooms to be reserved
        startDate:
          type: string
          description: Start date in yyyy-mm-dd
        endDate:
          type: string
          description: End date in yyyy-mm-dd
      description: Represents a reservation of rooms
    ReservationReceipt:
      allOf:
        - $ref: '#/components/schemas/Links'
        - type: object
          required:
            - id
            - expiryDate
            - lastUpdated
            - reservation
          properties:
            id:
              type: string
              description: Unique identification
            expiryDate:
              type: string
              description: Expiry date in yyyy-mm-dd
            lastUpdated:
              type: string
              description: Last updated time stamp
            reservation:
              $ref: '#/components/schemas/Reservation'
              description: Reservation
          description: Represents a receipt for the reservation
    ReservationCreated:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/ReservationReceipt'
    ReservationConflict:
      type: object
      required:
        - body
      properties:
        body:
          type: string
  messages:
    ReservationCreated:
      payload:
        $ref: '#/components/schemas/ReservationCreated'
    ReservationConflict:
      payload:
        $ref: '#/components/schemas/ReservationConflict'
    Subscribe:
      payload:
        $ref: '#/components/schemas/Subscribe'
      x-response:
        oneOf:
          - $ref: '#/components/messages/ReservationCreated'
          - $ref: '#/components/messages/ReservationConflict'
      x-response-type: simple-rpc
x-dispatcherKey: event