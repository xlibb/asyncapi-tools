asyncapi: 2.5.0
info:
  title: PayloadV
  version: 0.0.0
servers:
  development:
    url: "{server}:{port}/payloadV"
    protocol: ws
    protocolVersion: "13"
    variables:
      server:
        default: ws://localhost
      port:
        default: "9090"
channels:
  /locations:
    subscribe:
      message:
        oneOf:
          - payload:
              type: integer
              format: int64
          - payload:
              type: array
              items:
                $ref: '#/components/schemas/Location'
          - $ref: '#/components/messages/Rooms'
          - $ref: '#/components/messages/ReservationCreated'
          - $ref: '#/components/messages/ReservationConflict'
          - $ref: '#/components/messages/ReservationUpdated'
          - $ref: '#/components/messages/PaymentCreated'
          - $ref: '#/components/messages/PaymentConflict'
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/ReservationReceipt'
          - $ref: '#/components/messages/Link'
          - $ref: '#/components/messages/ReserveRoom'
          - $ref: '#/components/messages/Location'
          - $ref: '#/components/messages/Reservation'
          - $ref: '#/components/messages/PaymentReceipt'
          - $ref: '#/components/messages/Payment'
components:
  schemas:
    Link:
      type: object
      required:
        - rel
        - href
        - event
      properties:
        rel:
          type: string
        href:
          type: string
        mediaTypes:
          type: array
          items:
            type: string
        actions:
          type: array
          items:
            type: string
            enum:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
        event:
          type: string
          const: Link
          description: Remote trigger field
    Links:
      type: object
      required:
        - links
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ReserveRoom:
      type: object
      required:
        - id
        - count
        - event
      properties:
        id:
          type: string
          description: Unique identification of the room
        count:
          type: integer
          description: Number of rooms
          format: int64
        event:
          type: string
          const: ReserveRoom
          description: Remote trigger field
      description: Represents rooms be reserved
    Reservation:
      type: object
      required:
        - reserveRooms
        - startDate
        - endDate
        - event
      properties:
        reserveRooms:
          type: array
          items:
            $ref: '#/components/schemas/ReserveRoom'
          description: Rooms to be reserved
        startDate:
          type: string
          description: Start date in yyyy-mm-dd
        endDate:
          type: string
          description: End date in yyyy-mm-dd
        event:
          type: string
          const: Reservation
          description: Remote trigger field
      description: Represents a reservation of rooms
    ReservationReceipt:
      allOf:
        - $ref: '#/components/schemas/Links'
        - type: object
          required:
            - id
            - expiryDate
            - lastUpdated
            - reservation
            - event
          properties:
            id:
              type: string
              description: Unique identification
            expiryDate:
              type: string
              description: Expiry date in yyyy-mm-dd
            lastUpdated:
              type: string
              description: Last updated time stamp
            reservation:
              $ref: '#/components/schemas/Reservation'
              description: Reservation
            event:
              type: string
              const: ReservationReceipt
              description: Remote trigger field
          description: Represents a receipt for the reservation
    Location:
      allOf:
        - $ref: '#/components/schemas/Links'
        - type: object
          required:
            - name
            - id
            - address
            - event
          properties:
            name:
              type: string
              description: Name of the location
            id:
              type: string
              description: Unique identification
            address:
              type: string
              description: Address of the location
            event:
              type: string
              const: Location
              description: Remote trigger field
          description: Represents locations
    Room:
      type: object
      required:
        - id
        - category
        - capacity
        - wifi
        - status
        - currency
        - price
        - count
      properties:
        id:
          type: string
          description: Unique identification
        category:
          type: string
          enum:
            - DELUXE
            - KING
            - FAMILY
          description: Types of rooms available
        capacity:
          type: integer
          description: Number of people that can be accommodate
          format: int64
        wifi:
          type: boolean
          description: Availability of wifi
        status:
          type: string
          enum:
            - AVAILABLE
            - RESERVED
            - BOOKED
          description: Availability of room
        currency:
          type: string
          description: Currency used in price
        price:
          type: number
          description: Cost for the room
          format: double
        count:
          type: integer
          description: Number of rooms as per the status
          format: int64
      description: Represents resort room
    Rooms:
      allOf:
        - $ref: '#/components/schemas/Links'
        - type: object
          required:
            - rooms
          properties:
            rooms:
              type: array
              items:
                $ref: '#/components/schemas/Room'
              description: Array of rooms
          description: Represents a collection of resort rooms
    ReservationCreated:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/ReservationReceipt'
    ReservationConflict:
      type: object
      required:
        - body
      properties:
        body:
          type: string
    PaymentReceipt:
      type: object
      required:
        - id
        - total
        - lastUpdated
        - rooms
        - event
      properties:
        id:
          type: string
          description: Unique identification
        total:
          type: number
          description: Total amount paid
          format: double
        lastUpdated:
          type: string
          description: Last updated time stamp
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
          description: Booked rooms
        event:
          type: string
          const: PaymentReceipt
          description: Remote trigger field
      description: Reperesents receipt for the payment
    ReservationUpdated:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/ReservationReceipt'
    Payment:
      type: object
      required:
        - cardholderName
        - cardNumber
        - expiryMonth
        - expiryYear
        - event
      properties:
        cardholderName:
          type: string
          description: Name of the card holder
        cardNumber:
          type: integer
          description: Card number
          format: int64
        expiryMonth:
          type: string
          description: Expiration month of the card in mm
        expiryYear:
          type: string
          description: Expiaration year of the card in yyyy
        event:
          type: string
          const: Payment
          description: Remote trigger field
      description: Reperesents payement for rooms
    PaymentCreated:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/PaymentReceipt'
    PaymentConflict:
      type: object
      required:
        - body
      properties:
        body:
          type: string
  messages:
    ReservationReceipt:
      payload:
        $ref: '#/components/schemas/ReservationReceipt'
      x-response:
        payload:
          type: integer
          format: int64
      x-response-type: simple-rpc
    Link:
      payload:
        $ref: '#/components/schemas/Link'
      x-response:
        payload:
          type: integer
          format: int64
      x-response-type: simple-rpc
    ReserveRoom:
      payload:
        $ref: '#/components/schemas/ReserveRoom'
        description: ReserveRoom with a request
      description: Represents Snowpeak location resource
      x-response:
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Location'
        description: '`Location` representation'
      x-response-type: simple-rpc
    Rooms:
      payload:
        $ref: '#/components/schemas/Rooms'
    Location:
      payload:
        $ref: '#/components/schemas/Location'
        description: location message containing whole details
      description: Reperesents Snowpeak room collection resource
      x-response:
        $ref: '#/components/messages/Rooms'
        description: '`Rooms` representation'
      x-response-type: simple-rpc
    ReservationCreated:
      payload:
        $ref: '#/components/schemas/ReservationCreated'
    ReservationConflict:
      payload:
        $ref: '#/components/schemas/ReservationConflict'
    Reservation:
      payload:
        $ref: '#/components/schemas/Reservation'
        description: Reservation representation
      description: Represents Snowpeak reservation resource
      x-response:
        oneOf:
          - $ref: '#/components/messages/ReservationCreated'
          - $ref: '#/components/messages/ReservationConflict'
        description: '`ReservationCreated` or ReservationConflict representation'
      x-response-type: simple-rpc
    ReservationUpdated:
      payload:
        $ref: '#/components/schemas/ReservationUpdated'
    PaymentReceipt:
      payload:
        $ref: '#/components/schemas/PaymentReceipt'
        description: Reservation representation
      description: Represents Snowpeak reservation resource
      x-response:
        oneOf:
          - $ref: '#/components/messages/ReservationUpdated'
          - $ref: '#/components/messages/ReservationConflict'
        description: '`ReservationCreated` or ReservationConflict representation'
      x-response-type: simple-rpc
    PaymentCreated:
      payload:
        $ref: '#/components/schemas/PaymentCreated'
    PaymentConflict:
      payload:
        $ref: '#/components/schemas/PaymentConflict'
    Payment:
      payload:
        $ref: '#/components/schemas/Payment'
        description: Payment representation
      description: Represents Snowpeak payment resource
      x-response:
        oneOf:
          - $ref: '#/components/messages/PaymentCreated'
          - $ref: '#/components/messages/PaymentConflict'
        description: '`PaymentCreated` or `PaymentConflict` representation'
      x-response-type: simple-rpc
x-dispatcherKey: event